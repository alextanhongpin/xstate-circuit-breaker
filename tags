!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/336ebee/
author	package.json	/^  "author": "alextanhongpin <alextan220990@gmail.com>",$/;"	s
circuitBreakerMachine	circuit-breaker.js	/^export const circuitBreakerMachine = Machine($/;"	C
delay	index.js	/^function delay(duration = 1000) {$/;"	f
dependencies	package-lock.json	/^  "dependencies": {$/;"	o
dependencies	package.json	/^  "dependencies": {$/;"	o
description	package.json	/^  "description": "",$/;"	s
elapsed	circuit-breaker.js	/^  const elapsed = Date.now() - ctx.timeout;$/;"	C
failureThresholdReached	circuit-breaker.js	/^const failureThresholdReached = (ctx, evt) =>$/;"	C
incrementFailureCounter	circuit-breaker.js	/^const incrementFailureCounter = (ctx, evt) => ctx.failureCount + 1;$/;"	C
incrementSuccessCounter	circuit-breaker.js	/^const incrementSuccessCounter = (ctx, evt) => ctx.successCount + 1;$/;"	C
integrity	package-lock.json	/^      "integrity": "sha512-v+S3jF2YrM2tFOit8o7+4N3FuFd9IIGcIKHyfHeeNjMlmNmwuiv\/IbY9uw7ECifx7H\//;"	s	object:dependencies.xstate
keywords	package.json	/^  "keywords": [],$/;"	a
license	package.json	/^  "license": "ISC",$/;"	s
lockfileVersion	package-lock.json	/^  "lockfileVersion": 1,$/;"	n
main	index.js	/^async function main() {$/;"	f
main	package.json	/^  "main": "index.js",$/;"	s
name	package-lock.json	/^  "name": "circuit-breaker",$/;"	s
name	package.json	/^  "name": "circuit-breaker",$/;"	s
operationFailed	circuit-breaker.js	/^const operationFailed = (ctx, evt) => !!ctx.error;$/;"	C
requires	package-lock.json	/^  "requires": true,$/;"	b
resetFailureCounter	circuit-breaker.js	/^const resetFailureCounter = (ctx, evt) => 0;$/;"	C
resetSuccessCounter	circuit-breaker.js	/^const resetSuccessCounter = (ctx, evt) => 0;$/;"	C
resolved	package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xstate\/-\/xstate-4.11.0.tgz",$/;"	s	object:dependencies.xstate
scripts	package.json	/^  "scripts": {$/;"	o
startTimeoutTimer	circuit-breaker.js	/^const startTimeoutTimer = (ctx, evt) => Date.now();$/;"	C
successCountThresholdReached	circuit-breaker.js	/^const successCountThresholdReached = (ctx, evt) =>$/;"	C
test	package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1"$/;"	s	object:scripts
timeoutTimerExpired	circuit-breaker.js	/^const timeoutTimerExpired = (ctx, evt) => {$/;"	C
type	package.json	/^  "type": "module",$/;"	s
version	package-lock.json	/^      "version": "4.11.0",$/;"	s	object:dependencies.xstate
version	package-lock.json	/^  "version": "1.0.0",$/;"	s
version	package.json	/^  "version": "1.0.0",$/;"	s
xstate	package-lock.json	/^    "xstate": {$/;"	o	object:dependencies
xstate	package.json	/^    "xstate": "^4.11.0"$/;"	s	object:dependencies
xstate-circuit-breaker	README.md	/^# xstate-circuit-breaker$/;"	c
